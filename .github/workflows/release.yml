# This workflow creates a new release of the GitHub Action
# It uses GitHub's built-in release functionality, which works with the default GITHUB_TOKEN
# No additional permissions or tokens are required.

name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. v1, v1.0.0)'
        required: true
        default: 'v1'
      major_tag:
        description: 'Also update the major version tag (e.g., v1)? Only select Yes for stable releases.'
        type: boolean
        default: true

permissions:
  contents: write  # This is required for creating releases and tags

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Set up tag variables
        id: set_vars
        run: |
          VERSION=${{ github.event.inputs.version }}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          # Extract major version if needed (e.g. v1.2.3 -> v1)
          if [[ "$VERSION" =~ ^v[0-9]+\. ]]; then
            MAJOR_VERSION="v$(echo $VERSION | cut -d. -f1 | sed 's/v//')"
            echo "MAJOR_VERSION=${MAJOR_VERSION}" >> $GITHUB_ENV
            echo "HAS_MAJOR=true" >> $GITHUB_ENV
          else
            echo "HAS_MAJOR=false" >> $GITHUB_ENV
          fi
      
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            # Universal SonarQube Scanner ${{ env.VERSION }}
            
            Universal scanner for SonarQube and SonarCloud with support for:
            - .NET projects
            - Java with Maven
            - Java with Gradle
            - Generic/JS/TS projects
            
            ## Usage
            
            ```yaml
            - uses: sonar-solutions/universal-sonarqube-scan-action@${{ env.VERSION }}
              with:
                sonar_token: ${{ '${{' }} secrets.SONAR_TOKEN {{ '}}' }}
                project_key: "your_project_key"
                language: "dotnet"  # or java-maven, java-gradle, generic
            ```
            
            See README.md for full documentation.
          draft: false
          prerelease: false
      
      # Update major version tag if requested and if this is a semver release
      - name: Update major version tag
        if: ${{ github.event.inputs.major_tag == 'true' && env.HAS_MAJOR == 'true' }}
        run: |
          git tag -f ${{ env.MAJOR_VERSION }} ${{ env.VERSION }}
          git push -f origin ${{ env.MAJOR_VERSION }}
